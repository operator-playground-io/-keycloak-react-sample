{"version":3,"sources":["keycloak.js","components/NavBar.js","components/Home.js","components/Posts.js","App.js","index.js"],"names":["NODE_ENV","process","console","log","REACT_APP_AUTH_SERVER_URL","REACT_APP_AUTH_REALM","REACT_APP_AUTH_CLIENT","window","SERVER_URL","REALM","CLIENT","BACKEND_URL","BACKEND_REALM","BACKEND_CLIENT","kcConfig","keycloak","Keycloak","NavBar","props","useState","selectedTab","setSelectedTab","user","useKeycloak","authenticated","initialized","login","e","a","preventDefault","logout","links","Row","Col","Nav","Item","Link","eventKey","as","to","xl","href","name","onClick","xs","variant","defaultActiveKey","activeKey","onSelect","selectedKey","Container","Home","Posts","postList","setPostList","useEffect","getPosts","axios","get","response","data","length","map","post","Card","bg","Body","Title","title","Text","body","id","App","setToken","setUser","onTokens","tokens","token","loadUserInfo","profile","authClient","initOptions","onLoad","onAuthSuccess","onAuthLogout","onEvent","style","marginTop","exact","path","render","routeProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.178a0bf8.chunk.js","sourcesContent":["import Keycloak from 'keycloak-js';\r\n\r\nconst NODE_ENV = process.env.NODE_ENV ? process.env.NODE_ENV: 'development';\r\nconsole.log('NODE_ENV: ', NODE_ENV);\r\n\r\nconst {REACT_APP_AUTH_SERVER_URL, REACT_APP_AUTH_REALM, REACT_APP_AUTH_CLIENT} = process.env;\r\nconsole.log('REACT_APP_AUTH_SERVER_URL: ', REACT_APP_AUTH_SERVER_URL);\r\nconsole.log('REACT_APP_AUTH_REALM: ', REACT_APP_AUTH_REALM);\r\nconsole.log('REACT_APP_AUTH_CLIENT: ', REACT_APP_AUTH_CLIENT);\r\n\r\nconst {SERVER_URL, REALM, CLIENT} = window;\r\nconsole.log('SERVER_URL: ', SERVER_URL);\r\nconsole.log('REALM: ', REALM);\r\nconsole.log('CLIENT: ', CLIENT);\r\n\r\nconst BACKEND_URL = NODE_ENV === 'development' ? REACT_APP_AUTH_SERVER_URL : SERVER_URL;\r\nconst BACKEND_REALM = NODE_ENV === 'development' ? REACT_APP_AUTH_REALM : REALM;\r\nconst BACKEND_CLIENT = NODE_ENV === 'development' ? REACT_APP_AUTH_CLIENT : CLIENT;\r\nconsole.log('Backend URL: ', BACKEND_URL);\r\nconsole.log('Backend REALM: ', BACKEND_REALM);\r\nconsole.log('Backend CLIENT: ', BACKEND_CLIENT);\r\n\r\nconst kcConfig = {\r\n    \"realm\": BACKEND_REALM,         //\"myrealm\", \r\n    \"url\": BACKEND_URL,          //\"http://localhost:8080/auth/\",\r\n    \"clientId\": BACKEND_CLIENT      //\"vanilla\",\r\n  }\r\nconsole.log('Keycloak params: ', kcConfig);\r\nconst keycloak = new Keycloak(kcConfig);\r\n\r\nexport default keycloak;","import { useKeycloak } from \"@react-keycloak/web\";\r\nimport React, { useState, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Nav, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst NavBar = (props) => {\r\n  const [selectedTab, setSelectedTab] = useState(\"/\");\r\n  const { user } = props;\r\n\r\n  const { keycloak, initialized } = useKeycloak();\r\n\r\n  const { authenticated } = keycloak;\r\n\r\n  const renderAuthLinks = () => {\r\n    console.log(\"Render auth links - authenticated: \", authenticated);\r\n   \r\n\r\n    if (authenticated) {\r\n      return (\r\n        <Row>\r\n          <Col>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"/\" as=\"div\">\r\n                <Link to=\"/\">Home</Link>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Col>\r\n          <Col xl={5}>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"/posts\" as=\"div\" href=\"/posts\">\r\n                <Link to=\"/posts\">Posts</Link>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Col>\r\n          <Col>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"/logoff\" as=\"div\" href=\"#\">\r\n                Welcome {user.name}\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Col>\r\n          <Col>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"/logoff\" as=\"div\" href=\"#\" onClick={logout}>\r\n                <Link to=\"/logoff\">Logout</Link>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        <Col xs={7}>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey=\"/\" as=\"div\">\r\n              <Link to=\"/\">Home</Link>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Col>\r\n        <Col>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey=\"/login\" as=\"div\" href=\"/#\" onClick={login}>\r\n              <Link to=\"/login\">Login</Link>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const selectTab = (selectedKey) => {\r\n    console.log(\"select tab \", selectedKey);\r\n    console.log(\"userInfo:\", user);\r\n    setSelectedTab(selectedKey);\r\n  };\r\n\r\n  const login = async (e) => {\r\n    console.log(\"login: \", e);\r\n    e.preventDefault();\r\n    await keycloak.login();\r\n  };\r\n\r\n  const logout = async (e) => {\r\n    console.log(\"logout: \", e);\r\n    e.preventDefault();\r\n    await keycloak.logout();\r\n  };\r\n\r\n  const links = renderAuthLinks();\r\n\r\n  return (\r\n    <Nav\r\n      variant=\"tabs\"\r\n      defaultActiveKey=\"/\"\r\n      activeKey={selectedTab}\r\n      onSelect={selectTab}\r\n    >\r\n      <Container>\r\n      {links}        \r\n      </Container>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","const Home = (props) => {\r\n  return (\r\n    <div>\r\n      This is a public page. Click on the Login link to authenticate and see the\r\n      list of posts.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useKeycloak } from \"@react-keycloak/web\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst Posts = (props) => {\r\n  const [postList, setPostList] = useState();\r\n  const { keycloak, initialized } = useKeycloak();\r\n\r\n  const { authenticated } = keycloak;\r\n\r\n  useEffect(\r\n    () => getPosts(),\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  const getPosts = async () => {\r\n    console.log(\"Get posts...\");\r\n    if (!authenticated) {\r\n      setPostList([]);\r\n    }\r\n\r\n    try {\r\n      console.log(\r\n        \"Get posts from https://jsonplaceholder.typicode.com/users/1/posts\"\r\n      );\r\n      const response = await axios.get(\r\n        \"https://jsonplaceholder.typicode.com/users/1/posts\"\r\n      );\r\n      const data = response.data;\r\n      console.log(data);\r\n\r\n      setPostList(data);\r\n    } catch (error) {\r\n      console.log(\"Failed to retrieve the posts. error: \", error);\r\n    }\r\n  };\r\n\r\n  console.log(\"Posts: \", postList);\r\n\r\n  if (!postList || postList.length === 0) {\r\n    return <div>No post was found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {postList.map((post) => (\r\n        <Card bg=\"light\" key={post.id}>\r\n          <Card.Body>\r\n            <Card.Title>{post.title}</Card.Title>\r\n            <Card.Text>{post.body}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { useState } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ReactKeycloakProvider } from \"@react-keycloak/web\";\nimport keycloak from \"./keycloak\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport Navbar from \"./components/NavBar\";\nimport Home from \"./components/Home\";\nimport Posts from \"./components/Posts\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState({});\n\n  const onAuthSuccess = (e) => {\n    console.log(\"onAuthSuccess: \", e);\n  };\n\n  const onAuthLogout = (e) => {\n    console.log(\"onAuthLogout: \", e);\n  };\n\n  const onTokens = async (tokens) => {\n    console.log(\"tokens: \", tokens);\n\n    // keycloak.loadUserProfile()\n    // .then(function(profile) {\n    //     alert(JSON.stringify(profile, null, \"  \"))\n    // }).catch(function() {\n    //     alert('Failed to load user profile');\n    // });\n\n    setToken(tokens ? tokens.token : \"\");\n\n    if (tokens && tokens.token) {\n      const profile = await keycloak.loadUserInfo();\n      console.log(\"User profile:\", profile);\n      // alert(JSON.stringify(profile, null, \"  \"));\n      setUser(profile);\n    }\n  };\n\n  const onEvent = (e) => {\n    console.log(\"onEvent: \", e);\n  };\n\n  return (\n    <ReactKeycloakProvider\n      authClient={keycloak}\n      initOptions={{ onLoad: \"check-sso\" }}\n      onTokens={onTokens}\n      onAuthSuccess={onAuthSuccess}\n      onAuthLogout={onAuthLogout}\n      onEvent={onEvent}\n    >\n      <BrowserRouter>\n          <Navbar user={user} />\n          <Container>\n          <Row style={{marginTop:'50px'}}>\n            <Col>\n              <Switch>\n                <Route exact path=\"/posts\" render={(routeProps) => <Posts />} />\n                <Route exact path=\"/\" render={Home} />\n                <Redirect to=\"/\" />\n              </Switch>\n            </Col>\n          </Row>\n          </Container>\n      </BrowserRouter>\n    </ReactKeycloakProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}